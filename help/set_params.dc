
/***2-gosfdoc.json配置说明

    {
        // 项目扫描路径，根据路径下的文件生成文档。该路径可以是绝对路径或则相对路径，相对路径是根据配置文件的目录连接计算。
        // "/" 表示从配置文件所在目录开始扫描，建议使用绝对路径或"/"。 使用create 命令生成出来的配置文件是绝对路径。
        "ScanPath"         : "/",

        // 指定生成文档的语言，例如多语言混合编程的时候，就可以指定需要生成语言的文档。（注：目前只支持golang）
        "CodeLang"         : ["go"],

        // 指定文档生成的目录路径，路径可以是绝对路径或相对路径，相对路径是根据ScanPath路径连接。默认"doc"
        "Outpath"          : "doc",

        // 追加的前缀路径，在使用go的同学可能都知道使用github时在项目工作目录下还需要建立"github.com/slowfei/[projectname]"
        // 然而在生成文档时操作路径是在项目的根目录操作的，OutAppendPath的设置就是为此准备。如果不了解的同学可以先试试使用空""。
        "OutAppendPath"    : "github.com/slowfei/gosfdoc",

        // 在生成文档时是否将源代码复制一份，默认true。如果false将不复制源代码，此时在浏览文档中就无法浏览源代码。
        // 需要设置CodeLinkRoot为true，浏览文档时直接浏览项目目录文件的源代码。
        "CopyCode"         : true,

        // CodeLinkRoot与CopyCode是辅助作用的，如果设置true浏览源代码的路径是项目的根目录，则CopyCode可以设置false。
        // 此时在浏览项目文档时，查看源代码的路径就会以项目根目录为主。如果设置false，CopyCode最好设置为true，否则在浏览
        // 项目文档时无法浏览源代码。
        "CodeLinkRoot"     : false,

        // 生成的文档是以html形式展现的，这里可以设置html的标题显示。
        "HtmlTitle"        : "gosfdoc document",

        // 在文档页面中有显示文档标题，具体效果可以运行文档查看。
        "DocTitle"         : "<b>Github: <a target='_blank' href='https://github.com/slowfei/gosfdoc'>https://github.com/slowfei/gosfdoc</a></b>",

        // 浏览文档页面中左侧导航的标题显示
        "MenuTitle"        : "<center><b>markdown</b></center>",

        // 文档支持的本地化语言选项，gosfdoc可以支持本地化多语言浏览文档，但需要的是自行翻译。本地话语言使用可以查看"本地化语言支持"
        // 设置例子： 
        //  [
        //      {"default" : "Default"}
        //      {"zh-cn" : "简体中文"}
        //      {"en-us" : "English"}
        //  ],
        //
        "Languages"        : [
                                {"default" : "Default"}
                             ],

        // 需要过滤不扫描的子目录文件路径，使用的是相对路径。例如："test-template"是一个测试静态页面的目录，所以不需要生成文档。
        "FilterPaths"      : [
                                "assets",
                                "test-template"
                             ] 
    }

*/











